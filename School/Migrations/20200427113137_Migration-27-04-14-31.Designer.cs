// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using School.Models;

namespace School.Migrations
{
    [DbContext(typeof(SchoolContext))]
    [Migration("20200427113137_Migration-27-04-14-31")]
    partial class Migration27041431
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("School.Models.Group", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Day");

                    b.Property<string>("Desc");

                    b.Property<int>("GrTeachId");

                    b.Property<string>("Table");

                    b.Property<string>("Time");

                    b.HasKey("Id");

                    b.HasIndex("GrTeachId")
                        .IsUnique();

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("School.Models.GroupTeacher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("TeachId");

                    b.HasKey("Id");

                    b.HasIndex("TeachId");

                    b.ToTable("GroupTeachers");
                });

            modelBuilder.Entity("School.Models.NewsMdl", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("PostDT");

                    b.Property<string>("Text");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.ToTable("NewsMdls");
                });

            modelBuilder.Entity("School.Models.Review", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("PostDT");

                    b.Property<int>("Rate");

                    b.Property<string>("Text");

                    b.Property<int>("UsrId");

                    b.HasKey("Id");

                    b.HasIndex("UsrId")
                        .IsUnique();

                    b.ToTable("Reviews");
                });

            modelBuilder.Entity("School.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("RoleName");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new { Id = 3, RoleName = "Преподаватель" }
                    );
                });

            modelBuilder.Entity("School.Models.User", b =>
                {
                    b.Property<int>("UsrId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstName");

                    b.Property<int?>("GrId");

                    b.Property<string>("LastName");

                    b.Property<string>("Login");

                    b.Property<string>("Mail");

                    b.Property<string>("Pass");

                    b.Property<int>("RoleId");

                    b.HasKey("UsrId");

                    b.HasIndex("GrId");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("School.Models.Group", b =>
                {
                    b.HasOne("School.Models.GroupTeacher", "GrTeach")
                        .WithOne("Gr")
                        .HasForeignKey("School.Models.Group", "GrTeachId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("School.Models.GroupTeacher", b =>
                {
                    b.HasOne("School.Models.User", "Teacher")
                        .WithMany("GrTeach")
                        .HasForeignKey("TeachId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("School.Models.Review", b =>
                {
                    b.HasOne("School.Models.User", "User")
                        .WithOne("Review")
                        .HasForeignKey("School.Models.Review", "UsrId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("School.Models.User", b =>
                {
                    b.HasOne("School.Models.Group", "UsrGr")
                        .WithMany("Users")
                        .HasForeignKey("GrId");

                    b.HasOne("School.Models.Role", "UsrRole")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
